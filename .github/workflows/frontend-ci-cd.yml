name: Frontend CI/CD

on:
  push:
    paths:
      - 'WebFrontend/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    paths:
      - 'WebFrontend/**'
      - '.github/workflows/frontend-ci-cd.yml'
  workflow_dispatch:

env:
  DOCKER_IMAGE: pichuka-frontend
  DOCKER_REGISTRY: ghcr.io  # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }}/${{ env.DOCKER_IMAGE }}
  VERSION: ${{ github.sha }}
  CONTAINER_NAME: pichuka-frontend

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      working-directory: ./WebFrontend
      run: npm ci

    - name: Run linting
      working-directory: ./WebFrontend
      run: npm run lint

    - name: Run tests
      working-directory: ./WebFrontend
      run: npm test

  build-and-push:
    name: Build and Push
    needs: test
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=long

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./deploy/frontend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VITE_API_BASE_URL=${{ vars.PRODUCTION_API_URL || 'https://api.pichuka.com' }}

  deploy:
    name: Deploy to Production
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Deploy to server
      env:
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT || '22' }}
        DOCKER_IMAGE: ${{ env.IMAGE_NAME }}:${{ github.sha }}
      run: |
        # Add server to known hosts
        mkdir -p ~/.ssh
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
        
        # SSH into server and deploy
        ssh -p $SSH_PORT $SSH_USER@$SSH_HOST '
          # Pull the new image
          docker pull $DOCKER_IMAGE
          
          # Stop and remove existing container
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          
          # Run the new container
          docker run -d \
            --name $CONTAINER_NAME \
            --network pongal-network \
            -p 3000:80 \
            -e NODE_ENV=production \
            --restart unless-stopped \
            $DOCKER_IMAGE
        '
