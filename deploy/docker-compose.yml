version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: pichuka-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-RESTAURANT}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - pichuka-network

  # Backend Service
  backend:
    build:
      context: ..
      dockerfile: deploy/backend/Dockerfile
    container_name: pichuka-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-example}@mongodb:27017/${MONGO_INITDB_DATABASE:-RESTAURANT}?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    networks:
      - pongal-network

  # Frontend Service
  frontend:
    build:
      context: ..
      dockerfile: deploy/frontend/Dockerfile
    container_name: pichuka-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=/api
      - NODE_ENV=production
    ports:
      - "3000:80"
    networks:
      - pongal-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:stable-alpine
    container_name: pichuka-nginx
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - pongal-network

# Volumes
volumes:
  mongodb_data:

# Networks
networks:
  pongal-network:
    driver: bridge
